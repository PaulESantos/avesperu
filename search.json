[{"path":"https://paulesantos.github.io/avesperu/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 avesperu authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://paulesantos.github.io/avesperu/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul E. Santos Andrade. Author, maintainer.","code":""},{"path":"https://paulesantos.github.io/avesperu/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Santos - Andrade, PE. (2025). avesperu: Access List Birds Species Peru. R package version 0.0.7","code":"@Manual{,   title = {avesperu: Access to the List of Birds Species of Peru},   author = {Paul E. Santos - Andrade},   year = {2025},   note = {R package version 0.0.7}, }"},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"avesperu-","dir":"","previous_headings":"","what":"Access to the List of Birds Species of Peru","title":"Access to the List of Birds Species of Peru","text":"avesperu package provides access --date comprehensive dataset Peru’s avian diversity. September 29, 2025, list includes 1,917 bird species, reflecting significant taxonomic changes updated validations based recent scientific publications, photographs, sound recordings deposited accredited institutions. classification follows guidelines set South American Checklist Committee (SACC).","code":""},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"species-categories","dir":"","previous_headings":"","what":"Species Categories","title":"Access to the List of Birds Species of Peru","text":"species dataset classified one following categories, reflecting status Peru: X Resident: 1,545 species E Endemic: 120 species NB Migratory (non-breeding): 140 species V Vagrant: 85 species Introduced: 3 species EX Extirpated: 0 species H Hypothetical: 23 species P : 2 species results total 1,917 species, showcasing Peru’s extraordinary bird diversity ongoing refinement avifaunal checklist.","code":""},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Access to the List of Birds Species of Peru","text":"avesperu package designed streamline access data researchers, conservationists, bird enthusiasts alike. provides: comprehensive updated bird species dataset following latest SACC classification. Taxonomy validation tools, ensuring consistency international standards. Fuzzy matching capabilities improved species name retrieval validation.","code":""},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"insights-and-trends","dir":"","previous_headings":"Features","what":"Insights and Trends","title":"Access to the List of Birds Species of Peru","text":"chart shows steady increase number bird species recorded Peru 1968 2025, reflecting continuous research improvements taxonomic resolution: substantial jump occurred 1968 1980, 187 new species recorded. recent years, updates slowed continued increase steadily, reflecting meticulous reviews published records taxonomic refinements.","code":""},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"categorical-summary","dir":"","previous_headings":"Features","what":"Categorical Summary","title":"Access to the List of Birds Species of Peru","text":"species resident (X), accounting 1,545 species. Endemic species (E) increased 120, reinforcing Peru’s status center avian endemism. hypothetical category (H) includes 23 species, pending stronger evidence full inclusion.","code":""},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"suggested-citation","dir":"","previous_headings":"","what":"Suggested citation:","title":"Access to the List of Birds Species of Peru","text":"","code":"citation(\"avesperu\") #> To cite avesperu in publications use: #>  #>   Santos - Andrade, PE. (2025). avesperu: Access to the List of Birds #>   Species of Peru. R package version 0.0.7 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {avesperu: Access to the List of Birds Species of Peru}, #>     author = {Paul E. Santos - Andrade}, #>     year = {2025}, #>     note = {R package version 0.0.7}, #>   } #>  #> To cite the avesperu dataset, please use: Plenge, M. A. & F. Angulo #> [29/09/2025] List of the birds of Peru / Lista de las aves del Perú. #> Unión de Ornitólogos del Perú: #> https://sites.google.com/site/boletinunop/checklist"},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access to the List of Birds Species of Peru","text":"can install avesperu package CRAN using: Also can install development version avesperu like :","code":"install.packages(\"avesperu\") # or pak::pak(\"avesperu\") pak::pak(\"PaulESantos/avesperu\")"},{"path":[]},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"basic-search","dir":"","previous_headings":"Usage","what":"Basic Search","title":"Access to the List of Birds Species of Peru","text":"search_avesperu() function accepts character vector species names returns status information Peru bird database. function fully vectorized, allowing efficient batch processing multiple species simultaneously.","code":"library(avesperu) #> This is avesperu 0.0.7 #> The UNOP database is up to date (current version: 29 de septiembre de 2025).  # Define species list splist <- c(\"Falco sparverius\",             \"Tinamus osgoodi\",             \"Phoenicoparrus jamesi\",             \"Crypturellus soui\",             \"Thraupis palmarum\",             \"Thamnophilus praecox\",             \"Penelope albipennis\")  # Search for species information search_avesperu(splist = splist) #> [1] \"Residente\"  \"Residente\"  \"Migratorio\" \"Residente\"  \"Residente\"  #> [6] \"Residente\"  \"Endémico\""},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"integration-with-data-frames","dir":"","previous_headings":"Usage","what":"Integration with Data Frames","title":"Access to the List of Birds Species of Peru","text":"function integrates seamlessly data.frame tibble objects, enabling efficient taxonomic validation within data processing pipelines:","code":"# Create a data frame with species names bird_data <- tibble::tibble(species = splist)  # Add taxonomic information bird_data |>    dplyr::mutate(taxonomy = search_avesperu(species))  #> # A tibble: 7 × 2 #>   species               taxonomy   #>   <chr>                 <chr>      #> 1 Falco sparverius      Residente  #> 2 Tinamus osgoodi       Residente  #> 3 Phoenicoparrus jamesi Migratorio #> 4 Crypturellus soui     Residente  #> 5 Thraupis palmarum     Residente  #> 6 Thamnophilus praecox  Residente  #> 7 Penelope albipennis   Endémico  # Or extract specific fields bird_data  |>    dplyr::mutate(     status = search_avesperu(species, return_details = TRUE)$status,     family = search_avesperu(species, return_details = TRUE)$family_name,     order = search_avesperu(species, return_details = TRUE)$order_name   ) #> # A tibble: 7 × 4 #>   species               status     family           order               #>   <chr>                 <chr>      <chr>            <chr>               #> 1 Falco sparverius      Residente  Falconidae       Falconiformes       #> 2 Tinamus osgoodi       Residente  Tinamidae        Tinamiformes        #> 3 Phoenicoparrus jamesi Migratorio Phoenicopteridae Phoenicopteriformes #> 4 Crypturellus soui     Residente  Tinamidae        Tinamiformes        #> 5 Thraupis palmarum     Residente  Thraupidae       Passeriformes       #> 6 Thamnophilus praecox  Residente  Thamnophilidae   Passeriformes       #> 7 Penelope albipennis   Endémico   Cracidae         Galliformes"},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"fuzzy-matching-for-name-variations","dir":"","previous_headings":"Usage","what":"Fuzzy Matching for Name Variations","title":"Access to the List of Birds Species of Peru","text":"package implements approximate string matching (fuzzy matching) handle typographical errors, spelling variations, incomplete names. feature significantly improves data quality working field observations legacy datasets may contain inconsistencies. Fuzzy Matching Works max_distance parameter controls matching tolerance: Values 0 1 (e.g., 0.1): Interpreted proportion name length “Tinamus osgoodi” (14 chars): allows 1 character difference (14 × 0.1) Integer values (e.g., 2): Interpreted absolute number character differences allowed","code":"# Species list with intentional typos splist_typos <- c(   \"Falco sparverius\",      # Correct   \"Tinamus osgodi\",        # Missing 'o' should match \"Tinamus osgoodi\"   \"Crypturellus sooui\",    # Extra 'o' should match \"Crypturellus soui\"   \"Tinamus guttatus\",      # Correct   \"Tinamus guttattus\",     # Extra 't' should match \"Tinamus guttatus\"   \"Thamnophilus praecox\",  # Correct   \"Penelope albipenis\"     # Missing 'n' should match \"Penelope albipennis\" )  # Search with moderate tolerance (5% of name length) results <- search_avesperu(splist_typos, max_distance = 0.05, return_details = TRUE)  # Display matching results results[, c(\"name_submitted\", \"accepted_name\", \"dist\")] #>         name_submitted        accepted_name dist #> 1     Falco sparverius     Falco sparverius    0 #> 2       Tinamus osgodi      Tinamus osgoodi    1 #> 3   Crypturellus sooui    Crypturellus soui    1 #> 4     Tinamus guttatus     Tinamus guttatus    0 #> 5    Tinamus guttattus     Tinamus guttatus    1 #> 6 Thamnophilus praecox Thamnophilus praecox    0 #> 7   Penelope albipenis  Penelope albipennis    1"},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"understanding-the-output","dir":"","previous_headings":"Usage","what":"Understanding the Output","title":"Access to the List of Birds Species of Peru","text":"name_submitted: original name provided user accepted_name: matched species name database dist: Levenshtein distance (number single-character edits required transform one string another) 0 = exact match 1 = one character difference (insertion, deletion, substitution) Higher values indicate greater divergence","code":""},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"adjusting-matching-sensitivity","dir":"","previous_headings":"Usage","what":"Adjusting Matching Sensitivity","title":"Access to the List of Birds Species of Peru","text":"","code":"# Strict matching: only 1 character difference allowed search_avesperu(splist_typos, max_distance = 1, return_details = TRUE) #>         name_submitted        accepted_name    order_name    family_name #> 1     Falco sparverius     Falco sparverius Falconiformes     Falconidae #> 2       Tinamus osgodi      Tinamus osgoodi  Tinamiformes      Tinamidae #> 3   Crypturellus sooui    Crypturellus soui  Tinamiformes      Tinamidae #> 4     Tinamus guttatus     Tinamus guttatus  Tinamiformes      Tinamidae #> 5    Tinamus guttattus     Tinamus guttatus  Tinamiformes      Tinamidae #> 6 Thamnophilus praecox Thamnophilus praecox Passeriformes Thamnophilidae #> 7   Penelope albipenis  Penelope albipennis   Galliformes       Cracidae #>             english_name              spanish_name    status dist #> 1       American Kestrel       Cernícalo Americano Residente    0 #> 2          Black Tinamou              Perdiz Negra Residente    1 #> 3         Little Tinamou              Perdiz Chica Residente    1 #> 4 White-throated Tinamou Perdiz de Garganta Blanca Residente    0 #> 5 White-throated Tinamou Perdiz de Garganta Blanca Residente    1 #> 6        Cocha Antshrike           Batará de Cocha Residente    0 #> 7      White-winged Guan        Pava de Ala Blanca  Endémico    1  # Proportional matching: 10% of name length search_avesperu(splist_typos, max_distance = 0.1, return_details = TRUE) #>         name_submitted        accepted_name    order_name    family_name #> 1     Falco sparverius     Falco sparverius Falconiformes     Falconidae #> 2       Tinamus osgodi      Tinamus osgoodi  Tinamiformes      Tinamidae #> 3   Crypturellus sooui    Crypturellus soui  Tinamiformes      Tinamidae #> 4     Tinamus guttatus     Tinamus guttatus  Tinamiformes      Tinamidae #> 5    Tinamus guttattus     Tinamus guttatus  Tinamiformes      Tinamidae #> 6 Thamnophilus praecox Thamnophilus praecox Passeriformes Thamnophilidae #> 7   Penelope albipenis  Penelope albipennis   Galliformes       Cracidae #>             english_name              spanish_name    status dist #> 1       American Kestrel       Cernícalo Americano Residente    0 #> 2          Black Tinamou              Perdiz Negra Residente    1 #> 3         Little Tinamou              Perdiz Chica Residente    1 #> 4 White-throated Tinamou Perdiz de Garganta Blanca Residente    0 #> 5 White-throated Tinamou Perdiz de Garganta Blanca Residente    1 #> 6        Cocha Antshrike           Batará de Cocha Residente    0 #> 7      White-winged Guan        Pava de Ala Blanca  Endémico    1  # Lenient matching: up to 2 character differences search_avesperu(splist_typos, max_distance = 2, return_details = TRUE) #>         name_submitted        accepted_name    order_name    family_name #> 1     Falco sparverius     Falco sparverius Falconiformes     Falconidae #> 2       Tinamus osgodi      Tinamus osgoodi  Tinamiformes      Tinamidae #> 3   Crypturellus sooui    Crypturellus soui  Tinamiformes      Tinamidae #> 4     Tinamus guttatus     Tinamus guttatus  Tinamiformes      Tinamidae #> 5    Tinamus guttattus     Tinamus guttatus  Tinamiformes      Tinamidae #> 6 Thamnophilus praecox Thamnophilus praecox Passeriformes Thamnophilidae #> 7   Penelope albipenis  Penelope albipennis   Galliformes       Cracidae #>             english_name              spanish_name    status dist #> 1       American Kestrel       Cernícalo Americano Residente    0 #> 2          Black Tinamou              Perdiz Negra Residente    1 #> 3         Little Tinamou              Perdiz Chica Residente    1 #> 4 White-throated Tinamou Perdiz de Garganta Blanca Residente    0 #> 5 White-throated Tinamou Perdiz de Garganta Blanca Residente    1 #> 6        Cocha Antshrike           Batará de Cocha Residente    0 #> 7      White-winged Guan        Pava de Ala Blanca  Endémico    1  # Exact matching only search_avesperu(splist_typos, max_distance = 0, return_details = TRUE) #>         name_submitted        accepted_name    order_name    family_name #> 1     Falco sparverius     Falco sparverius Falconiformes     Falconidae #> 2       Tinamus osgodi                 <NA>          <NA>           <NA> #> 3   Crypturellus sooui                 <NA>          <NA>           <NA> #> 4     Tinamus guttatus     Tinamus guttatus  Tinamiformes      Tinamidae #> 5    Tinamus guttattus                 <NA>          <NA>           <NA> #> 6 Thamnophilus praecox Thamnophilus praecox Passeriformes Thamnophilidae #> 7   Penelope albipenis                 <NA>          <NA>           <NA> #>             english_name              spanish_name    status dist #> 1       American Kestrel       Cernícalo Americano Residente    0 #> 2                   <NA>                      <NA>      <NA> <NA> #> 3                   <NA>                      <NA>      <NA> <NA> #> 4 White-throated Tinamou Perdiz de Garganta Blanca Residente    0 #> 5                   <NA>                      <NA>      <NA> <NA> #> 6        Cocha Antshrike           Batará de Cocha Residente    0 #> 7                   <NA>                      <NA>      <NA> <NA>"},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"best-practices","dir":"","previous_headings":"Usage","what":"Best Practices","title":"Access to the List of Birds Species of Peru","text":"Start conservative: Use max_distance = 0.05 (5%) initial data cleaning Review ambiguous matches: Check entries dist > 0 verify correctness Handle unmatched species: Names returning NA require manual verification Document threshold: Always report max_distance parameter used Handling Unmatched Names","code":"results <- search_avesperu(splist_typos,                             max_distance = 0,                            return_details = TRUE) results #>         name_submitted        accepted_name    order_name    family_name #> 1     Falco sparverius     Falco sparverius Falconiformes     Falconidae #> 2       Tinamus osgodi                 <NA>          <NA>           <NA> #> 3   Crypturellus sooui                 <NA>          <NA>           <NA> #> 4     Tinamus guttatus     Tinamus guttatus  Tinamiformes      Tinamidae #> 5    Tinamus guttattus                 <NA>          <NA>           <NA> #> 6 Thamnophilus praecox Thamnophilus praecox Passeriformes Thamnophilidae #> 7   Penelope albipenis                 <NA>          <NA>           <NA> #>             english_name              spanish_name    status dist #> 1       American Kestrel       Cernícalo Americano Residente    0 #> 2                   <NA>                      <NA>      <NA> <NA> #> 3                   <NA>                      <NA>      <NA> <NA> #> 4 White-throated Tinamou Perdiz de Garganta Blanca Residente    0 #> 5                   <NA>                      <NA>      <NA> <NA> #> 6        Cocha Antshrike           Batará de Cocha Residente    0 #> 7                   <NA>                      <NA>      <NA> <NA>  # Identify unmatched species unmatched <- results[is.na(results$accepted_name), ] unmatched #>       name_submitted accepted_name order_name family_name english_name #> 2     Tinamus osgodi          <NA>       <NA>        <NA>         <NA> #> 3 Crypturellus sooui          <NA>       <NA>        <NA>         <NA> #> 5  Tinamus guttattus          <NA>       <NA>        <NA>         <NA> #> 7 Penelope albipenis          <NA>       <NA>        <NA>         <NA> #>   spanish_name status dist #> 2         <NA>   <NA> <NA> #> 3         <NA>   <NA> <NA> #> 5         <NA>   <NA> <NA> #> 7         <NA>   <NA> <NA> if (nrow(unmatched) > 0) {   cat(\"The following names could not be matched:\\n\")   print(unmatched$name_submitted)      # Try with higher tolerance   retry <- search_avesperu(unmatched$name_submitted,                            max_distance = 0.15,                            return_details = TRUE )   retry   print(retry) } #> The following names could not be matched: #> [1] \"Tinamus osgodi\"     \"Crypturellus sooui\" \"Tinamus guttattus\"  #> [4] \"Penelope albipenis\" #>       name_submitted       accepted_name   order_name family_name #> 1     Tinamus osgodi     Tinamus osgoodi Tinamiformes   Tinamidae #> 2 Crypturellus sooui   Crypturellus soui Tinamiformes   Tinamidae #> 3  Tinamus guttattus    Tinamus guttatus Tinamiformes   Tinamidae #> 4 Penelope albipenis Penelope albipennis  Galliformes    Cracidae #>             english_name              spanish_name    status dist #> 1          Black Tinamou              Perdiz Negra Residente    1 #> 2         Little Tinamou              Perdiz Chica Residente    1 #> 3 White-throated Tinamou Perdiz de Garganta Blanca Residente    1 #> 4      White-winged Guan        Pava de Ala Blanca  Endémico    1"},{"path":[]},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"example-1-quality-control-for-field-data","dir":"","previous_headings":"Usage > Advanced Usage Examples","what":"Example 1: Quality Control for Field Data","title":"Access to the List of Birds Species of Peru","text":"","code":"# Simulated field observation data field_data <- data.frame(   observer = c(\"Observer A\", \"Observer B\", \"Observer A\", \"Observer C\"),   species = c(\"Amazilia amazilia\", \"Phaetornis guy\", \"Metallura tyrianthina\",                \"Tangara chilensis\"),   count = c(2, 1, 3, 5) )  # Validate species names and add taxonomy field_data_validated <- field_data  |>    dplyr::mutate(   taxonomy = purrr::map(species, ~search_avesperu(.x,                                             max_distance = 0.1,                                             return_details = TRUE))) |>    tidyr::unnest(taxonomy) |>    dplyr::select(observer, species, accepted_name, family_name,           english_name, status, count, dist)  field_data_validated #> # A tibble: 4 × 8 #>   observer   species   accepted_name family_name english_name status count dist  #>   <chr>      <chr>     <chr>         <chr>       <chr>        <chr>  <dbl> <chr> #> 1 Observer A Amazilia… Amazilis ama… Trochilidae Amazilia Hu… Resid…     2 1     #> 2 Observer B Phaetorn… Phaethornis … Trochilidae Green Hermit Resid…     1 1     #> 3 Observer A Metallur… Metallura ty… Trochilidae Tyrian Meta… Resid…     3 0     #> 4 Observer C Tangara … Tangara chil… Thraupidae  Paradise Ta… Resid…     5 0"},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"example-2-checking-endemic-status","dir":"","previous_headings":"Usage > Advanced Usage Examples","what":"Example 2: Checking Endemic Status","title":"Access to the List of Birds Species of Peru","text":"","code":"# Identify endemic species from a list my_species <- c(\"Penelope albipennis\", \"Xenoglaux loweryi\", \"Grallaria ridgelyi\",                 \"Falco sparverius\", \"Thraupis palmarum\")  results <- search_avesperu(my_species, return_details = TRUE)  # Filter endemic species endemic_species <- results  |>    dplyr::filter(status == \"Endémico\")  |>    dplyr::select(scientific_name = accepted_name, english_name, family_name)  print(endemic_species) #>       scientific_name         english_name family_name #> 1 Penelope albipennis    White-winged Guan    Cracidae #> 2   Xenoglaux loweryi Long-whiskered Owlet   Strigidae"},{"path":"https://paulesantos.github.io/avesperu/index.html","id":"example-3-taxonomic-summary","dir":"","previous_headings":"Usage > Advanced Usage Examples","what":"Example 3: Taxonomic Summary","title":"Access to the List of Birds Species of Peru","text":"","code":"# Get taxonomic distribution of a species list my_list <- search_avesperu(splist, return_details = TRUE)  # Count by family my_list  |>    dplyr::count(family_name, sort = TRUE) #>        family_name n #> 1        Tinamidae 2 #> 2         Cracidae 1 #> 3       Falconidae 1 #> 4 Phoenicopteridae 1 #> 5   Thamnophilidae 1 #> 6       Thraupidae 1  # Count by order my_list  |>    dplyr::count(order_name, sort = TRUE) #>            order_name n #> 1       Passeriformes 2 #> 2        Tinamiformes 2 #> 3       Falconiformes 1 #> 4         Galliformes 1 #> 5 Phoenicopteriformes 1  # Status summary my_list  |>    dplyr::count(status) #>       status n #> 1   Endémico 1 #> 2 Migratorio 1 #> 3  Residente 5"},{"path":"https://paulesantos.github.io/avesperu/reference/aves_peru_2025_v4.html","id":null,"dir":"Reference","previous_headings":"","what":"aves_peru_2025_v4 — aves_peru_2025_v4","title":"aves_peru_2025_v4 — aves_peru_2025_v4","text":"aves_peru_2025_v4 dataset provides updated tibble bird species recorded Peru, based recent taxonomic revisions South American Checklist Committee (SACC).","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/aves_peru_2025_v4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aves_peru_2025_v4 — aves_peru_2025_v4","text":"","code":"aves_peru_2025_v4"},{"path":"https://paulesantos.github.io/avesperu/reference/aves_peru_2025_v4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"aves_peru_2025_v4 — aves_peru_2025_v4","text":"tibble 1,916 rows 6 columns: order_name Taxonomic order bird species belongs. family_name Taxonomic family bird species belongs. scientific_name Scientific name bird species. english_name English common name bird species. spanish_name Spanish common name bird species. status Category indicating species' status, based following codes: X: Resident species. E: Endemic species. species considered endemic Peru record outside borders published. NB: Non-breeding (migratory) species. Species occur regularly Peru non-breeding period. V: Vagrant species. Species occasionally occur Peru part usual avifauna. : Introduced species. Species introduced Peru humans (colonized introduced populations elsewhere) established self-sustaining breeding populations. H: Hypothetical species. Records based observations, specimens dubious origin, unpublished photographs recordings kept private hands. EX: Extinct extirpated species. Species gone extinct extirpated Peru.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/aves_peru_2025_v4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"aves_peru_2025_v4 — aves_peru_2025_v4","text":"version reflects dramatic taxonomic changes category updates based published articles, photographs, sound recordings archived accredited institutions. also includes classification criterion following SACC guidelines. Species without specific code considered resident species, equivalent \"X\" category SACC. Total species: 1,916 Distribution status: X: 1,547 species E: 119 species NB: 139 species V: 85 species : 3 species EX: 0 species H: 23 species updates reflect SACC’s continuous evaluation process, now recognizes several former subspecies full species.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/aves_peru_2025_v4.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"aves_peru_2025_v4 — aves_peru_2025_v4","text":"Plenge, M. . Version (29-09-2025) List birds Peru / Lista de las aves del Perú. Unión de Ornitólogos del Perú: https://sites.google.com/site/boletinunop/checklist","code":""},{"path":[]},{"path":"https://paulesantos.github.io/avesperu/reference/aves_peru_2025_v4.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"aves_peru_2025_v4 — aves_peru_2025_v4","text":"Data compilation: Manuel . Plenge Package implementation: Paul Efren Santos Andrade","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/aves_peru_2025_v4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aves_peru_2025_v4 — aves_peru_2025_v4","text":"","code":"# Load the dataset data(\"aves_peru_2025_v4\")"},{"path":"https://paulesantos.github.io/avesperu/reference/dot-onAttach.html","id":null,"dir":"Reference","previous_headings":"","what":".onAttach hook — .onAttach","title":".onAttach hook — .onAttach","text":"Hook function runs package attached via library(). displays package version checks UNOP checklist updates.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/dot-onAttach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".onAttach hook — .onAttach","text":"","code":".onAttach(lib, pkg)"},{"path":"https://paulesantos.github.io/avesperu/reference/dot-onAttach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".onAttach hook — .onAttach","text":"lib character string indicating path library. pkg character string name package.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/dot-onLoad.html","id":null,"dir":"Reference","previous_headings":"","what":".onLoad hook — .onLoad","title":".onLoad hook — .onLoad","text":"Hook function runs package loaded. sets default options package.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/dot-onLoad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".onLoad hook — .onLoad","text":"","code":".onLoad(libname, pkgname)"},{"path":"https://paulesantos.github.io/avesperu/reference/dot-onLoad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".onLoad hook — .onLoad","text":"libname character string name library directory. pkgname character string name package.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/search_avesperu.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for Bird Species Data in the Birds of Peru Dataset — search_avesperu","title":"Search for Bird Species Data in the Birds of Peru Dataset — search_avesperu","text":"function searches bird species information dataset provided avesperu package, given list species names. supports approximate (fuzzy) matching handle typographical errors minor variations species names using optimized agrep() matching. function optimized small large lists intelligent pre-filtering optional parallel processing, maintaining exact agrep() precision.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/search_avesperu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for Bird Species Data in the Birds of Peru Dataset — search_avesperu","text":"","code":"search_avesperu(   splist,   max_distance = 0.1,   return_details = FALSE,   batch_size = 100,   parallel = TRUE,   n_cores = NULL )"},{"path":"https://paulesantos.github.io/avesperu/reference/search_avesperu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for Bird Species Data in the Birds of Peru Dataset — search_avesperu","text":"splist character vector factor containing scientific names bird species search . Names can include minor variations typos. max_distance Numeric. maximum allowable distance fuzzy matching. Can either: proportion 0 1 (e.g., 0.1 = 10\\ integer representing maximum number character differences Default: 0.1. return_details Logical. FALSE (default), returns character vector species status. TRUE, returns detailed data frame complete reconciliation information including taxonomic data matching distances. batch_size Integer. Number species process per batch handling large lists. Useful memory management progress tracking. Default: 100 species per batch. parallel Logical. parallel processing used large lists? Automatically disabled small lists. Requires parallel package. Default: TRUE. n_cores Integer NULL. Number CPU cores use parallel processing. NULL (default), uses detectCores() - 1 leave one core free system operations.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/search_avesperu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for Bird Species Data in the Birds of Peru Dataset — search_avesperu","text":"return value depends return_details parameter: return_details = FALSE (default): character vector length splist, containing conservation/occurrence status species. NA values indicate match found. return_details = TRUE: data frame (tibble-compatible) following columns: name_submitted Character. species name provided input (standardized). accepted_name Character. closest matching species name database, NA match found within max_distance. order_name Character. taxonomic order matched species. family_name Character. taxonomic family matched species. english_name Character. Common name English. spanish_name Character. Common name Spanish. status Character. Conservation occurrence status (e.g., \"Endemic\", \"Resident\", \"Migrant\", \"Vagrant\"). dist Character. Edit distance submitted matched names. Lower values indicate better matches. NA match found.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/search_avesperu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search for Bird Species Data in the Birds of Peru Dataset — search_avesperu","text":"function performs following steps: Validates input converts factors character vectors Standardizes species names using standardize_names() Identifies reports duplicate entries input list Uses intelligent pre-filtering reduce search space: Filters string length (mathematically guaranteed preserve matches) Optionally filters first character large candidate sets Performs precise agrep() fuzzy matching filtered candidates Calculates exact edit distances using adist() Selects best match (minimum distance) query large lists (>batch_size), processes batches optional parallelization","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/search_avesperu.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Search for Bird Species Data in the Birds of Peru Dataset — search_avesperu","text":"large lists (>10,000 species) parallel processing enabled, ensure sufficient system memory available. parallel worker maintains copy reference database (~5-10 MB).","code":""},{"path":[]},{"path":"https://paulesantos.github.io/avesperu/reference/search_avesperu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for Bird Species Data in the Birds of Peru Dataset — search_avesperu","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage - returns status vector splist <- c(\"Falco sparverius\", \"Tinamus osgodi\", \"Crypturellus soui\") status <- search_avesperu(splist) print(status)  # Get detailed reconciliation information details <- search_avesperu(splist, return_details = TRUE) print(details)  # Exact matching only (no fuzzy matching) exact_results <- search_avesperu(splist, max_distance = 0)  # Handle species with typos typo_list <- c(\"Falco sparveruis\", \"Tinamus osgoodi\", \"Crypturellus sui\") corrected <- search_avesperu(typo_list, return_details = TRUE)  # View submitted vs accepted names print(corrected[, c(\"name_submitted\", \"accepted_name\", \"dist\")])  } # }"},{"path":"https://paulesantos.github.io/avesperu/reference/show_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether to show progress bar Return logical TRUE/FALSE depending on options and interactive session — show_progress","title":"Determine whether to show progress bar Return logical TRUE/FALSE depending on options and interactive session — show_progress","text":"Determine whether show progress bar Return logical TRUE/FALSE depending options interactive session","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/show_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether to show progress bar Return logical TRUE/FALSE depending on options and interactive session — show_progress","text":"","code":"show_progress()"},{"path":"https://paulesantos.github.io/avesperu/reference/standardize_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Species Names — standardize_names","title":"Standardize Species Names — standardize_names","text":"Standardize Species Names","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/standardize_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Species Names — standardize_names","text":"","code":"standardize_names(splist)"},{"path":"https://paulesantos.github.io/avesperu/reference/standardize_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Species Names — standardize_names","text":"splist Character vector species names","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/standardize_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Species Names — standardize_names","text":"Standardized species names","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/unop_check_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the UNOP Checklist Has Been Updated — unop_check_update","title":"Check if the UNOP Checklist Has Been Updated — unop_check_update","text":"function compares latest update date UNOP checklist website reference version date. returns message indicating whether update occurred.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/unop_check_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the UNOP Checklist Has Been Updated — unop_check_update","text":"","code":"unop_check_update(version_date = \"29 de septiembre de 2025\")"},{"path":"https://paulesantos.github.io/avesperu/reference/unop_check_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the UNOP Checklist Has Been Updated — unop_check_update","text":"version_date Character string current local version date (e.g., \"05 de abril de 2025\").","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/unop_check_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the UNOP Checklist Has Been Updated — unop_check_update","text":"character message indicating site recent update.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/unop_update_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Last Update Date from UNOP Checklist Website — unop_update_date","title":"Get Last Update Date from UNOP Checklist Website — unop_update_date","text":"function scrapes \"Boletin UNOP\" checklist page extracts last update date mentioned text.","code":""},{"path":"https://paulesantos.github.io/avesperu/reference/unop_update_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Last Update Date from UNOP Checklist Website — unop_update_date","text":"","code":"unop_update_date()"},{"path":"https://paulesantos.github.io/avesperu/reference/unop_update_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Last Update Date from UNOP Checklist Website — unop_update_date","text":"character string date format \"dd de mes de yyyy\", NA date found.","code":""}]
